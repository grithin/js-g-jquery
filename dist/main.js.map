{"version":3,"sources":["main.coffee"],"names":["global","window","this","$","jQuery","require","fn","extractInput","data","addBack","filter","each","$e","name","value","attr","prop","val","push","concat","hasAttr","json","options","defaults","arguments","length","console","warn","contentType","dataType","method","JSON","stringify","_","ajax","file","fileInputs","xhr","FormData","append","map","what","files","url","location","XMLHttpRequest","open","send","eachApply","selector","setEnterSubmit","keypress","e","which","submit","fillInputs","values","hasOwnProperty","fillInput","isArray","v","indexOf","clearInputs","$el","fillOptions","key","text","childTexts","whitespace","texts","contents","nodeType","trim","remove","uniqueId","ids","get","_this","id","Math","random","slice","size","is","childless","children","un_attach","parent","index","detach","re_attach","sibling_before","after","isDetached","contains","document","outerHTML","clone","html","conform","possible_html","e$","first","toSelf","include_once","extension","that","started","included","Promise","resolve","Url","parse","pathname","split","pop","cache","appendTo","bind","makeInstance","all","firstMatch","selecter","find","href","link","dataId","contained","parents","txt","new_value","shown","css"],"mappings":"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","file":"main.js","sourcesContent":["`global = global || window || this`\n$ = global.$ || global.jQuery || require('jquery')\nglobal.$ = $\n\n\n# turn form into flat object of keyed values like:\n# {\"start[bob]\":\"\",  \"start[sue]\":\"\",  \"end\":\"\", ...}\n$.fn.extractInput = ->\n\tdata = {}\n\t# include children, and self (if self has [name])\n\t$('[name]', $(this)).addBack().filter('[name]').each ()->\n\t\t$e = $(this)\n\t\tname = $e.attr('name')\n\t\t# with a checkbox, it is either is off (false), or is on (takes the value of value=\"...\")\n\t\t# However, since url-encode turns `false` into a string \"false\", need a better indicator -> empty string\n\t\tif $(this).attr('type') == 'checkbox'\n\t\t\tif $(this).prop('checked')\n\t\t\t\tvalue = $(this).val()\n\t\t\telse\n\t\t\t\tvalue = ''\n\t\telse\n\t\t\tvalue = $e.val()\n\t\tif data[name] == undefined\n\t\t\tdata[name] = value\n\t\telse if data[name].push\n\t\t\tdata[name].push value\n\t\telse\n\t\t\tdata[name] = [data[name]].concat value\n\tdata\n\n\n$.fn.hasAttr = (name) ->\n\tif typeof @attr(name) != typeof undefined and @attr(name) != false\n\t\treturn true\n\tfalse\n\n#/jquery ajax post for json request and response.  the laziness is  strong with this one\n\n###\n\t@overloading\n\t\t[options]\n\t\t[url, data]\n\t\t[url, data, successCallback]\n\t$.json({url:'/api', data:{bob:{sue:'moe'}}})\n###\n\n$.json = (options) ->\n\tif arguments.length > 1\n\t\tconsole.warn('$.json expects one argument, and obj')\n\tdefaults =\n\t\tcontentType: 'application/json'\n\t\tdataType: 'json'\n\t\tmethod: 'POST'\n\tif options.data and typeof options.data != 'string'\n\t\toptions.data = JSON.stringify(options.data)\n\toptions = _.defaults(options, defaults)\n\n\t$.ajax options\n\n#/jquery ajax file post for json request and response\n\n###*\n@param\tfileInputs\tcan be array of elements, or a\n###\n\n$.file = (options, fileInputs) ->\n\tdata = new FormData\n\tif options.data\n\t\tdata.append '_json', JSON.stringify(options.data)\n\tfileInputs.map (file, what) ->\n\t\tdata.append $(file).attr('name'), file.files[0]\n\t\treturn\n\t#jquery doesn't handle setting boundary, so use basic javascript\n\toptions.url = options.url or window.location\n\txhr = new XMLHttpRequest\n\txhr.open 'POST', options.url\n\txhr.send data\n\txhr\n\t#xhr.setRequestHeader(\"X_FILENAME\", file.name);\n\n#apply fn to each ele matching selector (good for using bound arguments for later calls using bf.run)\n\n###*\nnews.subscribe(\n\t'view-change',\n\t$.eachApply.arg('[data-timeAgo]',bf.view.ele.timeAgo))\n###\n\n$.eachApply = (selector, fn) ->\n\t$(selector).each fn\n\treturn\n\n#/causes  form to submit when pressing enter on an type=\"input\" element (since without submit button, doesn't behave this way by default)\n\n###*\n@ex\t$('form').setEnterSubmit()\n###\n$.fn.setEnterSubmit = ->\n\t$('input', $(this)).keypress (e) ->\n\t\tif e.which == 13\n\t\t\t$(this).submit()\n\t\treturn\n\treturn\n\n# fill the inputs in a form with the keyed data provided\n$.fn.fillInputs = (values) ->\n\t$('[name]:not([type=\"submit\"])', $(this)).each ->\n\t\tname = $(this).attr('name')\n\t\tif values.hasOwnProperty(name)\n\t\t\t$(this).fillInput values[name]\n\t\treturn\n\treturn\n\n# fill the input of `this` element depending upon the value, and depending upon input type (checkbox, select, etc)\n$.fn.fillInput = (value)->\n\tif $(this).attr('type') == 'checkbox'\n\t\tif _.isArray(value)\n\t\t\t# handle case of list of checked values, wherein apply check if self.value within\n\t\t\t# first, conform to string\n\t\t\tvalue = value.map (v)-> v+''\n\t\t\tif value.indexOf($(this).val()) != -1\n\t\t\t\t$(this).prop('checked',true)\n\t\telse\n\t\t\tif value && value != '0'\n\t\t\t\t$(this).prop('checked',true)\n\telse\n\t\t$(this).val(value || '')\n\n# clear named inputs at and within an element\n$.fn.clearInputs = ->\n\t$('[name]', $(this)).addBack().filter('[name]').each ()->\n\t\t$el = $(this)\n\t\tif $el.attr('type') == 'checkbox'\n\t\t\t$el.prop 'checked', false\n\t\telse\n\t\t\t$el.val ''\n\t$el\n\n\n$.fn.fillOptions = (options) ->\n\tfor key of options\n\t\t$(this).append $('<option>').val(options[key][0]).text(options[key][1])\n\treturn\n# get all child text nodes\n$.fn.childTexts = (whitespace) ->\n\ttexts = []\n\t$(this).contents().filter(->\n\t\t@nodeType == 3\n\t).each ->\n\t\ttexts.push _.trim($(this).text())\n\t\treturn\n\tif !whitespace\n\t\ttexts = _.remove(texts)\n\t\t#clear empty values\n\ttexts\n$.uniqueId = new ()->\n\t@ids = {}\n\t@get = ()=>\n\t\tid = 'unique-'+('' + Math.random())[2..]\n\t\tif @ids[id]\n\t\t\treturn @get()\n\t\tif $('#unique-'+id).size()\n\t\t\treturn @get()\n\t\t@ids[id] = true\n\t\treturn id\n\t@is = (id)=>\n\t\t!!@ids[id]\n\treturn\n# if no id, create a unique id for the element\n$.fn.uniqueId = ()->\n\tid = $(this).attr('id')\n\tif !id\n\t\tid = $.uniqueId.get()\n\t\t$(this).attr('id', id)\n\treturn id\n# get children that have no children, or self if self has none\n# use `$('div').childless().first()` to get single\n$.fn.childless = ()->\n\tif !$(this).children().length\n\t\treturn $(this)\n\treturn $('*:not(:has(*))', this) # all elements that don't hav children\n\n\n# detach element, but keep track of where it was for re-attachment\n$.fn.un_attach = ()->\n\t$(this).data('detached_from', $(this).parent())\n\t$(this).data('detached_index', $(this).index())\n\t$(this).detach()\n# re-attach an un-attached element\n$.fn.re_attach = ()->\n\tparent = $(this).data('detached_from')\n\tindex = $(this).data('detached_index')\n\tsibling_before = $(':lt('+index+'):last', parent)\n\tif sibling_before.size()\n\t\tsibling_before.after $(this)\n\telse\n\t\tparent.append($(this))\n# determine if an element is detached from the dom\n$.fn.isDetached = ()->\n\tif $(this).data('detached_from')\n\t\treturn true\n\tif $(this).parent().size()\n\t\treturn false\n\t!$.contains(document, this)\n# get the outerHTML of an element, regardless of whether it is attached to the DOM\n$.fn.outerHTML = ()->\n\tif $(this)[0]\n\t\treturn $(this)[0].outerHTML\n\treturn $('<div>').append($(this).clone()).html()\n# turn what might be html into a e$, or, if not, wrap it in <div>\n$.conform = (possible_html)->\n\te$ = $('<div>').html(possible_html)\n\tif e$.children().size()\n\t\treturn e$.children().first()\n\te$\n# apply a function to self text\n$.fn.toSelf = (fn)->\n\t$(this).text fn($(this).text())\n\n# include css/js once\n$.include_once = ((url)->\n\tif !@started # fill with existing loadeds\n\t\t@started = true\n\t\tthat = @\n\t\t$('link').each ()-> that.included[$(this).attr('href')] = Promise.resolve()\n\t\t$('script').each ()-> that.included[$(this).attr('src')] = Promise.resolve()\n\tif !@included[url]\n\t\textension = Url.parse(url).pathname.split('.').pop()\n\t\tif extension == 'js'\n\t\t\t@included[url] = $.ajax(dataType: \"script\", cache: true, url: url)\n\t\telse if extension == 'css'\n\t\t\t$('<link rel=\"stylesheet\" type=\"text/css\" >').attr('href', url).appendTo('body')\n\t\t\t@included[url] = Promise.resolve()\n\treturn @included[url]\n).bind(_.makeInstance(started: false, included: {}))\n\n# get all elements, including self\n$.fn.all = ()->\n\t$('*',$(this)).addBack()\n# find the first element matching a filter, including searching the current element\n$.fn.firstMatch = (selecter)->\n\t$(this).all().find(selecter).first()\n\n\n# get current href or set it\n$.fn.href = (link)->\n\tif arguments.length == 1\n\t\treturn $(this).attr('href', link)\n\telse\n\t\t$(this).attr('href')\n# get current id or set it\n$.fn.id = (id)->\n\tif arguments.length == 1\n\t\treturn $(this).attr('id', id)\n\telse\n\t\t$(this).attr('id')\n###\n[data-id] on self?  On a parent?  On a single child?\n###\n$.fn.dataId = ()->\n\tif $(this).hasAttr('data-id')\n\t\treturn $(this).attr('data-id')\n\tcontained = $(this).parents('[data-id]:first')\n\tif contained.size()\n\t\treturn contained.attr('data-id')\n\tchildren = $(this).find('[data-id]')\n\tif children.size() == 1\n\t\treturn children.attr('data-id')\n\n\n# get value or text, with priority of value\n$.fn.txt = (new_value)->\n\tif new_value == undefined\n\t\tif $(this).hasAttr('value')\n\t\t\treturn $(this).attr('value')\n\t\telse\n\t\t\treturn $(this).text()\n\telse\n\t\tif $(this).hasAttr('value')\n\t\t\treturn $(this).attr('value', new_value)\n\t\telse\n\t\t\treturn $(this).text(new_value)\n\n$.fn.shown = ()->\n\t$(this).css('display') == 'none'"],"sourceRoot":"/source/"}